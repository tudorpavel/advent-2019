(ns advent-test
  (:require [advent :refer :all]
            [clojure.test :refer :all]))

(deftest map-row-test
  (is (= [[1 0] [4 0]] (map-row ".#..#" 0)))
  )

(deftest make-points-test
  (is (= [[1 0] [4 0] [0 2] [1 2] [2 2]
          [3 2] [4 2] [4 3] [3 4] [4 4]]
         (make-points [".#..#"
                       "....."
                       "#####"
                       "....#"
                       "...##"])))
  )

(deftest line-equation-test
  (is (= [nil 1] (line-equation [1 3] [1 7])))
  (is (= [0   8] (line-equation [5 8] [2 8])))
  (is (= [1/3 0] (line-equation [3 1] [6 2])))
  )

(deftest point-on-line?-test
  (is (point-on-line? [1 9] [nil 1]))
  (is (point-on-line? [1 8] [0 8]))
  (is (point-on-line? [9 3] [1/3 0]))
  )

(deftest distance-test
  (is (= (Math/sqrt 61) (distance [9 7] [3 2]))))

(deftest segments->point-set-test
  (is (= #{[1 2] [1 3] [1 4]}
         (segments->point-set ['([1 2] [1 3]) '([1 3] [1 4])])))
  )

(deftest sorted-targets-test
  (is (= '(([8 1] [8 0])
           ([9 0])
           ([9 1])
           ([10 0])
           ([9 2] [10 1])
           ([11 1])
           ([12 1] [14 0])
           ([11 2])
           ([15 1])
           ([12 2] [16 1])
           ([13 2])
           ([14 2])
           ([15 2])
           ([12 3] [13 3] [14 3])
           ([16 4])
           ([15 4])
           ([10 4])
           ([4 4])
           ([2 4])
           ([2 3])
           ([0 2])
           ([1 2])
           ([0 1])
           ([1 1])
           ([5 2])
           ([1 0])
           ([5 1])
           ([6 1])
           ([6 0])
           ([7 0]))
         (sorted-targets [8 3]
                         [".#....#####...#.."
                          "##...##.#####..##"
                          "##...#...#.#####."
                          "..#.....#...###.."
                          "..#.#.....#....##"]))))

(deftest best-monitoring-asteroid-test
  (is (= [[3 4] 8] (best-monitoring-asteroid
                    [".#..#"
                     "....."
                     "#####"
                     "....#"
                     "...##"])))

  (is (= [[5 8] 33] (best-monitoring-asteroid
                     ["......#.#."
                      "#..#.#...."
                      "..#######."
                      ".#.#.###.."
                      ".#..#....."
                      "..#....#.#"
                      "#..#....#."
                      ".##.#..###"
                      "##...#..#."
                      ".#....####"])))

  (is (= [[1 2] 35] (best-monitoring-asteroid
                     ["#.#...#.#."
                      ".###....#."
                      ".#....#..."
                      "##.#.#.#.#"
                      "....#.#.#."
                      ".##..###.#"
                      "..#...##.."
                      "..##....##"
                      "......#..."
                      ".####.###."])))

  (is (= [[6 3] 41] (best-monitoring-asteroid
                     [".#..#..###"
                      "####.###.#"
                      "....###.#."
                      "..###.##.#"
                      "##.##.#.#."
                      "....###..#"
                      "..#.#..#.#"
                      "#..#.#.###"
                      ".##...##.#"
                      ".....#.#.."])))

  (is (= [[11 13] 210] (best-monitoring-asteroid
                        [".#..##.###...#######"
                         "##.############..##."
                         ".#.######.########.#"
                         ".###.#######.####.#."
                         "#####.##.#.##.###.##"
                         "..#####..#.#########"
                         "####################"
                         "#.####....###.#.#.##"
                         "##.#################"
                         "#####.##.###..####.."
                         "..######..##.#######"
                         "####.##.####...##..#"
                         ".#####..#.######.###"
                         "##...#.##########..."
                         "#.##########.#######"
                         ".####.#.###.###.#.##"
                         "....##.##.###..#####"
                         ".#.#.###########.###"
                         "#.#.#.#####.####.###"
                         "###.##.####.##.#..##"])))
  )

(deftest nth-kill-test
  (is (= [14 3] (nth-kill [8 3]
                          [".#....#####...#.."
                           "##...##.#####..##"
                           "##...#...#.#####."
                           "..#.....#...###.."
                           "..#.#.....#....##"]
                          36)))
  (is (= [8 2] (nth-kill [11 13]
                         [".#..##.###...#######"
                          "##.############..##."
                          ".#.######.########.#"
                          ".###.#######.####.#."
                          "#####.##.#.##.###.##"
                          "..#####..#.#########"
                          "####################"
                          "#.####....###.#.#.##"
                          "##.#################"
                          "#####.##.###..####.."
                          "..######..##.#######"
                          "####.##.####...##..#"
                          ".#####..#.######.###"
                          "##...#.##########..."
                          "#.##########.#######"
                          ".####.#.###.###.#.##"
                          "....##.##.###..#####"
                          ".#.#.###########.###"
                          "#.#.#.#####.####.###"
                          "###.##.####.##.#..##"]
                         200)))
  )
